# OpenReview Matcher CircleCI 2.0 configuration file 28
version: 2.1

parameters:
  openreview-api-v1-branch:
    type: string
    default: "master"
  openreview-api-v2-branch:
    type: string
    default: "main"

jobs:
  build:
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large
    parallelism: 10
    working_directory: ~/
    docker:
      - image: cimg/python:3.10.12-node
      - image: cimg/redis:6.2.6
      - image: mongo:6.0
        command: [ --replSet, rs0 ]
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
        environment:
          xpack.security.enabled: false
          transport.host: localhost
    steps:
      - checkout:
          path: ~/openreview-matcher-repo
      - run:
          name: Initialize replica set
          command: |
            # Source the utility functions  
            source ~/openreview-matcher-repo/.circleci/ci-utils.sh

            retry sudo apt-get install gnupg curl
            curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor
            echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
            retry sudo apt-get update
            retry sudo apt-get upgrade -y
            retry sudo apt-get install -y mongodb-org=6.0.7
            mongosh mongodb://localhost:27017 --eval "rs.initiate()"
      - run:
          name: Clone OpenReview API V1 branch << pipeline.parameters.openreview-api-v1-branch >>
          command: |
            git clone https://$OPENREVIEW_GITHUB@github.com/openreview/openreview-api-v1.git ~/openreview
            cd ~/openreview && git checkout << pipeline.parameters.openreview-api-v1-branch >>
      - run:
          name: Clone OpenReview API V2 branch << pipeline.parameters.openreview-api-v2-branch >>
          command: |
            git clone https://$OPENREVIEW_GITHUB@github.com/openreview/openreview-api.git ~/openreview-v2
            cd ~/openreview-v2 && git checkout << pipeline.parameters.openreview-api-v2-branch >>
      - run:
          name: Clone openreview-py 
          command: |
            git clone https://$OPENREVIEW_GITHUB@github.com/openreview/openreview-py.git ~/openreview-py
      - run:
          name: Create API directories
          command: |
            mkdir -p ~/openreview/logs
            mkdir -p ~/openreview/files/attachments
            mkdir -p ~/openreview/files/pdfs
            mkdir -p ~/openreview/files/temp
            mkdir -p ~/openreview-v2/logs
            mkdir -p ~/openreview-v2/files/attachments
            mkdir -p ~/openreview-v2/files/pdfs
            mkdir -p ~/openreview-v2/files/temp
      - run:
          name: Override API V1 database configuration
          command: |
            cd ~/openreview
            # Create a backup of the original config
            cp config/circleci.json config/circleci.json.backup
            # Use Node.js to update the database configuration
            node -e "
            const fs = require('fs');
            const config = JSON.parse(fs.readFileSync('config/circleci.json', 'utf8'));
            config.database = {
              'url': 'localhost:27017',
              'name': 'openreview_test',
              'queryLimit': 10000,
              'maxTimeMS': 50000,
              'operationLimit': 100000,
              'options': {
                'maxPoolSize': 1000
              }
            };
            fs.writeFileSync('config/circleci.json', JSON.stringify(config, null, 2));
            "
      - run:
          # source: https://support.mozilla.org/en-US/kb/install-firefox-linux#w_system-firefox-installation-for-advanced-users
          # source: https://ubuntu-mate.community/t/firefox-installation-guide-non-snap/25299
          name: Install Firefox
          command: |
            # Source the utility functions  
            source ~/openreview-matcher-repo/.circleci/ci-utils.sh

            wget "https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US" -O firefox-latest.tar.bz2
            tar -xvf firefox-*.tar.bz2
            sudo mv firefox /opt
            sudo ln -s /opt/firefox/firefox /usr/local/bin/firefox
            retry sudo apt-get install libgtk-3-0
            retry sudo apt-get install libasound2
            retry sudo apt-get install libdbus-glib-1-2
            echo export PATH="$PATH:/usr/local/bin/firefox" >> ~/.bashrc
            source ~/.bashrc
      - run:
          name: Setup Python virtual environment
          command: |
            python -m venv matcher
      - run:
          name: Install dependencies
          command: |
            source matcher/bin/activate
            cd ~/openreview-matcher-repo
            pip install -e .
      - run:
          name: Install openreview-py
          command: |
            source matcher/bin/activate
            pip install py
            pip install selenium==4.2.0
            pip install pytest-selenium
            cd ~/openreview-matcher-repo
            pip install -e ~/openreview-py
      - run:
          name: Start API V1
          command: |
            source matcher/bin/activate
            cd ~/openreview
            npm run cleanStart
          background: true
      - run:
          name: Wait for API V1 to start
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=2 --read-timeout=20 --timeout=150 http://localhost:3000
            :
      - run:
          name: Start API V2
          command: |
            source matcher/bin/activate
            cd ~/openreview-v2
            npm run cleanStart
          background: true
      - run:
          name: Wait for API V2 to start
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=150 http://localhost:3001
            :
      - run:
          name: Run tests
          command: |
            source matcher/bin/activate
            cd ~/openreview-matcher-repo
            mkdir -p reports/pytest
            TEST_FILES=$(circleci tests glob "tests/test_*.py")
            echo "$TEST_FILES" | circleci tests run --command="xargs pytest --durations=0 -o junit_family=legacy --junitxml=reports/pytest/pytest-report.xml" --verbose --split-by=timings
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
